/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index'
import { Route as errors503RouteImport } from './routes/(errors)/503'
import { Route as errors500RouteImport } from './routes/(errors)/500'
import { Route as errors404RouteImport } from './routes/(errors)/404'
import { Route as errors403RouteImport } from './routes/(errors)/403'
import { Route as errors401RouteImport } from './routes/(errors)/401'
import { Route as authSignInRouteImport } from './routes/(auth)/sign-in'
import { Route as AuthenticatedSettingsRouteRouteImport } from './routes/_authenticated/settings/route'
import { Route as AuthenticatedStrugglingIndexRouteImport } from './routes/_authenticated/struggling/index'
import { Route as AuthenticatedSettingsIndexRouteImport } from './routes/_authenticated/settings/index'
import { Route as AuthenticatedGroupsIndexRouteImport } from './routes/_authenticated/groups/index'
import { Route as AuthenticatedContentIndexRouteImport } from './routes/_authenticated/content/index'
import { Route as AuthenticatedAnalyticsIndexRouteImport } from './routes/_authenticated/analytics/index'
import { Route as AuthenticatedStudentsStudentIdRouteImport } from './routes/_authenticated/students/$studentId'
import { Route as AuthenticatedSettingsAppearanceRouteImport } from './routes/_authenticated/settings/appearance'
import { Route as AuthenticatedGroupsGroupIdRouteImport } from './routes/_authenticated/groups/$groupId'
import { Route as AuthenticatedErrorsErrorRouteImport } from './routes/_authenticated/errors/$error'
import { Route as AuthenticatedContentLessonsLessonIdRouteImport } from './routes/_authenticated/content/lessons/$lessonId'
import { Route as AuthenticatedContentCoursesCourseIdRouteImport } from './routes/_authenticated/content/courses/$courseId'

const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const errors503Route = errors503RouteImport.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRouteImport,
} as any)
const errors500Route = errors500RouteImport.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRouteImport,
} as any)
const errors404Route = errors404RouteImport.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const errors403Route = errors403RouteImport.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRouteImport,
} as any)
const errors401Route = errors401RouteImport.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignInRoute = authSignInRouteImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedSettingsRouteRoute =
  AuthenticatedSettingsRouteRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedStrugglingIndexRoute =
  AuthenticatedStrugglingIndexRouteImport.update({
    id: '/struggling/',
    path: '/struggling/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedSettingsIndexRoute =
  AuthenticatedSettingsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedGroupsIndexRoute =
  AuthenticatedGroupsIndexRouteImport.update({
    id: '/groups/',
    path: '/groups/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedContentIndexRoute =
  AuthenticatedContentIndexRouteImport.update({
    id: '/content/',
    path: '/content/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedAnalyticsIndexRoute =
  AuthenticatedAnalyticsIndexRouteImport.update({
    id: '/analytics/',
    path: '/analytics/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedStudentsStudentIdRoute =
  AuthenticatedStudentsStudentIdRouteImport.update({
    id: '/students/$studentId',
    path: '/students/$studentId',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedSettingsAppearanceRoute =
  AuthenticatedSettingsAppearanceRouteImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedGroupsGroupIdRoute =
  AuthenticatedGroupsGroupIdRouteImport.update({
    id: '/groups/$groupId',
    path: '/groups/$groupId',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedErrorsErrorRoute =
  AuthenticatedErrorsErrorRouteImport.update({
    id: '/errors/$error',
    path: '/errors/$error',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedContentLessonsLessonIdRoute =
  AuthenticatedContentLessonsLessonIdRouteImport.update({
    id: '/content/lessons/$lessonId',
    path: '/content/lessons/$lessonId',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedContentCoursesCourseIdRoute =
  AuthenticatedContentCoursesCourseIdRouteImport.update({
    id: '/content/courses/$courseId',
    path: '/content/courses/$courseId',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/sign-in': typeof authSignInRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/': typeof AuthenticatedIndexRoute
  '/errors/$error': typeof AuthenticatedErrorsErrorRoute
  '/groups/$groupId': typeof AuthenticatedGroupsGroupIdRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/students/$studentId': typeof AuthenticatedStudentsStudentIdRoute
  '/analytics': typeof AuthenticatedAnalyticsIndexRoute
  '/content': typeof AuthenticatedContentIndexRoute
  '/groups': typeof AuthenticatedGroupsIndexRoute
  '/settings/': typeof AuthenticatedSettingsIndexRoute
  '/struggling': typeof AuthenticatedStrugglingIndexRoute
  '/content/courses/$courseId': typeof AuthenticatedContentCoursesCourseIdRoute
  '/content/lessons/$lessonId': typeof AuthenticatedContentLessonsLessonIdRoute
}
export interface FileRoutesByTo {
  '/sign-in': typeof authSignInRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/': typeof AuthenticatedIndexRoute
  '/errors/$error': typeof AuthenticatedErrorsErrorRoute
  '/groups/$groupId': typeof AuthenticatedGroupsGroupIdRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/students/$studentId': typeof AuthenticatedStudentsStudentIdRoute
  '/analytics': typeof AuthenticatedAnalyticsIndexRoute
  '/content': typeof AuthenticatedContentIndexRoute
  '/groups': typeof AuthenticatedGroupsIndexRoute
  '/settings': typeof AuthenticatedSettingsIndexRoute
  '/struggling': typeof AuthenticatedStrugglingIndexRoute
  '/content/courses/$courseId': typeof AuthenticatedContentCoursesCourseIdRoute
  '/content/lessons/$lessonId': typeof AuthenticatedContentLessonsLessonIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/(auth)/sign-in': typeof authSignInRoute
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/errors/$error': typeof AuthenticatedErrorsErrorRoute
  '/_authenticated/groups/$groupId': typeof AuthenticatedGroupsGroupIdRoute
  '/_authenticated/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/_authenticated/students/$studentId': typeof AuthenticatedStudentsStudentIdRoute
  '/_authenticated/analytics/': typeof AuthenticatedAnalyticsIndexRoute
  '/_authenticated/content/': typeof AuthenticatedContentIndexRoute
  '/_authenticated/groups/': typeof AuthenticatedGroupsIndexRoute
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexRoute
  '/_authenticated/struggling/': typeof AuthenticatedStrugglingIndexRoute
  '/_authenticated/content/courses/$courseId': typeof AuthenticatedContentCoursesCourseIdRoute
  '/_authenticated/content/lessons/$lessonId': typeof AuthenticatedContentLessonsLessonIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/settings'
    | '/sign-in'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/'
    | '/errors/$error'
    | '/groups/$groupId'
    | '/settings/appearance'
    | '/students/$studentId'
    | '/analytics'
    | '/content'
    | '/groups'
    | '/settings/'
    | '/struggling'
    | '/content/courses/$courseId'
    | '/content/lessons/$lessonId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/sign-in'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/'
    | '/errors/$error'
    | '/groups/$groupId'
    | '/settings/appearance'
    | '/students/$studentId'
    | '/analytics'
    | '/content'
    | '/groups'
    | '/settings'
    | '/struggling'
    | '/content/courses/$courseId'
    | '/content/lessons/$lessonId'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_authenticated/settings'
    | '/(auth)/sign-in'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_authenticated/'
    | '/_authenticated/errors/$error'
    | '/_authenticated/groups/$groupId'
    | '/_authenticated/settings/appearance'
    | '/_authenticated/students/$studentId'
    | '/_authenticated/analytics/'
    | '/_authenticated/content/'
    | '/_authenticated/groups/'
    | '/_authenticated/settings/'
    | '/_authenticated/struggling/'
    | '/_authenticated/content/courses/$courseId'
    | '/_authenticated/content/lessons/$lessonId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  authSignInRoute: typeof authSignInRoute
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/struggling/': {
      id: '/_authenticated/struggling/'
      path: '/struggling'
      fullPath: '/struggling'
      preLoaderRoute: typeof AuthenticatedStrugglingIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AuthenticatedSettingsIndexRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/groups/': {
      id: '/_authenticated/groups/'
      path: '/groups'
      fullPath: '/groups'
      preLoaderRoute: typeof AuthenticatedGroupsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/content/': {
      id: '/_authenticated/content/'
      path: '/content'
      fullPath: '/content'
      preLoaderRoute: typeof AuthenticatedContentIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/analytics/': {
      id: '/_authenticated/analytics/'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof AuthenticatedAnalyticsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/students/$studentId': {
      id: '/_authenticated/students/$studentId'
      path: '/students/$studentId'
      fullPath: '/students/$studentId'
      preLoaderRoute: typeof AuthenticatedStudentsStudentIdRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/settings/appearance': {
      id: '/_authenticated/settings/appearance'
      path: '/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof AuthenticatedSettingsAppearanceRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/groups/$groupId': {
      id: '/_authenticated/groups/$groupId'
      path: '/groups/$groupId'
      fullPath: '/groups/$groupId'
      preLoaderRoute: typeof AuthenticatedGroupsGroupIdRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/errors/$error': {
      id: '/_authenticated/errors/$error'
      path: '/errors/$error'
      fullPath: '/errors/$error'
      preLoaderRoute: typeof AuthenticatedErrorsErrorRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/content/lessons/$lessonId': {
      id: '/_authenticated/content/lessons/$lessonId'
      path: '/content/lessons/$lessonId'
      fullPath: '/content/lessons/$lessonId'
      preLoaderRoute: typeof AuthenticatedContentLessonsLessonIdRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/content/courses/$courseId': {
      id: '/_authenticated/content/courses/$courseId'
      path: '/content/courses/$courseId'
      fullPath: '/content/courses/$courseId'
      preLoaderRoute: typeof AuthenticatedContentCoursesCourseIdRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
  }
}

interface AuthenticatedSettingsRouteRouteChildren {
  AuthenticatedSettingsAppearanceRoute: typeof AuthenticatedSettingsAppearanceRoute
  AuthenticatedSettingsIndexRoute: typeof AuthenticatedSettingsIndexRoute
}

const AuthenticatedSettingsRouteRouteChildren: AuthenticatedSettingsRouteRouteChildren =
  {
    AuthenticatedSettingsAppearanceRoute: AuthenticatedSettingsAppearanceRoute,
    AuthenticatedSettingsIndexRoute: AuthenticatedSettingsIndexRoute,
  }

const AuthenticatedSettingsRouteRouteWithChildren =
  AuthenticatedSettingsRouteRoute._addFileChildren(
    AuthenticatedSettingsRouteRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedSettingsRouteRoute: typeof AuthenticatedSettingsRouteRouteWithChildren
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedErrorsErrorRoute: typeof AuthenticatedErrorsErrorRoute
  AuthenticatedGroupsGroupIdRoute: typeof AuthenticatedGroupsGroupIdRoute
  AuthenticatedStudentsStudentIdRoute: typeof AuthenticatedStudentsStudentIdRoute
  AuthenticatedAnalyticsIndexRoute: typeof AuthenticatedAnalyticsIndexRoute
  AuthenticatedContentIndexRoute: typeof AuthenticatedContentIndexRoute
  AuthenticatedGroupsIndexRoute: typeof AuthenticatedGroupsIndexRoute
  AuthenticatedStrugglingIndexRoute: typeof AuthenticatedStrugglingIndexRoute
  AuthenticatedContentCoursesCourseIdRoute: typeof AuthenticatedContentCoursesCourseIdRoute
  AuthenticatedContentLessonsLessonIdRoute: typeof AuthenticatedContentLessonsLessonIdRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedSettingsRouteRoute: AuthenticatedSettingsRouteRouteWithChildren,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedErrorsErrorRoute: AuthenticatedErrorsErrorRoute,
  AuthenticatedGroupsGroupIdRoute: AuthenticatedGroupsGroupIdRoute,
  AuthenticatedStudentsStudentIdRoute: AuthenticatedStudentsStudentIdRoute,
  AuthenticatedAnalyticsIndexRoute: AuthenticatedAnalyticsIndexRoute,
  AuthenticatedContentIndexRoute: AuthenticatedContentIndexRoute,
  AuthenticatedGroupsIndexRoute: AuthenticatedGroupsIndexRoute,
  AuthenticatedStrugglingIndexRoute: AuthenticatedStrugglingIndexRoute,
  AuthenticatedContentCoursesCourseIdRoute:
    AuthenticatedContentCoursesCourseIdRoute,
  AuthenticatedContentLessonsLessonIdRoute:
    AuthenticatedContentLessonsLessonIdRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  authSignInRoute: authSignInRoute,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
